import java.util.Random;
import java.util.Scanner;

public class DualpivotSort {

	public static void main(String[] args) {

		Random random = new Random();
		int[] array = new int[3200000];
		for (int i = 0; i < array.length; i++) {
			array[i] = random.nextInt(3200000);
		}

		long start_time = System.currentTimeMillis();
		
		quickSortDualPivot(array,0, array.length-1);
		
		long end_time = System.currentTimeMillis();

		System.out.println("time for computation = " + (end_time - start_time) + "ms");

	}

	private static void swap(int[] a, int i, int j) {
		int temp = a[i];
		a[i] = a[j];
		a[j] = temp; 
	}
	
	public static void quickSortDualPivot(int[] array, int low, int high){

		if (low >= high) {
			return;
		}
		if ((high - low) < 513) { // insertion sort 
			for (int i = low + 1; i <= high; i++) {
				for (int j = i; j > low && array[j] < array[j - 1]; j--) {
					swap(array, j, j - 1);
				}
			}
			return; 
		}

		int lt = low + 1;
		int ht = high - 1;
		
		if (array[low] > array[high]) {
			int temp = array[low];
			array[low] = array[high];
			array[high] = temp;
			
		}

		if (low + 1 == high) {
			return;
		}

		for (int i = low + 1;i <= high; i++) {
			if (i > ht) {
				break;
			}

			if (array[i] < array[low]) {
				int temp = array[lt];
				array[lt] = array[i];
				array[i] = temp;
				lt++;
			} else if (array[i] > array[high]) {
				int temp = array[ht];
				array[ht] = array[i];
				array[i] = temp;
				ht--;
				i--;
			}
		}
		
		ht++;
		int temp = array[ht];
		array[ht] = array[high];
		array[high] = temp;
		lt--;
		temp = array[lt];
		array[lt] = array[low];
		array[low] = temp;

		quickSortDualPivot(array, low, lt - 1);
		quickSortDualPivot(array, lt + 1, ht - 1);
		quickSortDualPivot(array, ht + 1, high);
	}

}
