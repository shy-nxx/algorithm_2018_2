import java.util.Random;

public class MergeSort {
	static void mergeSort(int[] array, int low, int high){
		if(low < high){
			int middle = (low + high) / 2;
			mergeSort(array, low, middle);
			mergeSort(array, middle+1, high);
			merge(array, low, middle, high);
		}
	}

	static void merge(int[] array, int low, int middle, int high){
		int i, j, k, l;
		i=low; j=middle+1; k=low;
		
		int[] sorted = new int[array.length];
		
		while(i<=middle && j<=high)
		{
			if(array[i]<=array[j])
				sorted[k++]=array[i++];
			else
				sorted[k++]=array[j++];
		}

		if(i>middle) {
			for(l=j; l<=high; l++)
				sorted[k++]=array[l];
		}
		else {
			for(l=i; l<=high; l++)
				sorted[k++]=array[l];
		}
		
		for(l=low; l<=high; l++)
			array[l]=sorted[l];

	}
	public static void main(String[] args) {
		Random random = new Random();
		int[] arr = new int[3200000];
		for (int i = 0; i < arr.length; i++ )
			arr[i] = random.nextInt(32000);
		long start_time = System.currentTimeMillis();
		mergeSort(arr, 0, arr.length-1);
		long end_time = System.currentTimeMillis();

		System.out.println("computation time = " + (end_time - start_time) + "ms");



	}
}


