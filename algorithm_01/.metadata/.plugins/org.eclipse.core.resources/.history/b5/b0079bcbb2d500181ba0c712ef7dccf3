package algorithm01;

import java.util.Scanner;

public class Student20140179Q3 {
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan = new Scanner(System.in);
		String input = scan.nextLine(); //문자열로 입력받음
		
		int c = 1;
		int[] digit = new int[input.length()];
	
		for(int i = 0; i < input.length(); i++ ) {
			digit[i] = input.charAt(i) - '0'; //문자열을 정수배열에 대입 
		}
		
		int count_of_one = 0;
		
		int[] multi = multiDigit(c, digit);
		while(!hasAllOnes(multi)) {
			c++;
			multi = multiDigit(c, digit);
			count_of_one = count_array_size(multi);
			
		}
		System.out.println(count_of_one);
	}
	
	public static int count_array_size(int[] multi_array) {
		int count_of_one = 0;
		for(int i = 0; i < multi_array.length; i++) {
			
			int cnt = (int)(Math.log10(multi_array[i])+1);
			
			count_of_one += cnt;
		}
		return count_of_one;
	}
	
	public static int[] multiDigit(int c, int[] digit) {
		//같은 숫자르 더하는 방식으로 구현
		int cnt = (int)(Math.log10(c)+1);
		int[] multi = new int[digit.length+cnt -1];
		int[] c_array = new int[cnt];
		int k = 0;
		int[] reverse = new int[cnt];
		
		
		while(c != 0) {
			c_array[k] = c % 10;
			c = c / 10;
			k++;
		}
		
		k = 0;
		for (int i = c_array.length -1; i >= 0; i--) {
			reverse[k] = c_array[i];
			k++;
		}
		
		for (int i = 0; i < digit.length; i++) {
			for (int m = 0; m < reverse.length; m++) {
				multi[i + m] += digit[i] * reverse[m];
			}
		}

		//multi[] = {9,21}
		for (int i = multi.length -1; i > 0; i--) {
			multi[i-1] = multi[i-1] + multi[i] / 10;
			multi[i] = multi[i] % 10;
		}
		
		return multi;
		
	}
	
	public static boolean hasAllOnes(int[] multi_array) {
		for(int i = 0; i < multi_array.length; i++) {
			if (multi_array[i] != 1) return false;
			int cnt = (int)(Math.log10(multi_array[i])+1);
			for (int j = 1; j <= cnt; j++) {
				int div = multi_array[i] % 10;
				
				if (div != 1) {
					return false;
				}
				multi_array[i] = multi_array[i] / 10;
			}
			
		}
		return true;
	}
}
